// Deuda
/**
 * The Deudor entity.
 * Representa los datos comunes para cualquier tipo de deudor en el sistema
 * @author Patricio Cornejo
 */
entity Deudor {
	/** rut */
	rut Integer required unique,
	/** Dígito verificador */
	dv String required minlength(1) maxlength(1),
	/** Nombre completo */
	nombre String,
	/** Fecha de ingreso al sistema */
	fechaIngreso Instant required
}

/**
 * The DeudorPersona entity.
 * Extiende la entidad Deudor con datos relevantes a personal naturales. Consiste unicamente de datos informativos
 * @author Patricio Cornejo
 */
entity DeudorPersona {
	fechaNacimiento Instant,
	/** Limitado a valores "M" y "F"  */
	sexo String minlength(1) maxlength(1),
	/** No contiene mayores validaciones de contenido */
	estadoCivil String,
	/** No contiene mayores validaciones de contenido */
	nivelEducacional String,
	/** Antiguedad laboral en años */
	antiguedadLaboral Integer,
	/** No contiene mayores validaciones de contenido */
	cargo String,
	/** No contiene mayores validaciones de contenido */
	profesion String,
	/** No contiene mayores validaciones de contenido */
	empleador String
}

relationship OneToOne {
	DeudorPersona to Deudor
}

/**
 * The DeudorEmpresa entity.
 * Extiende la entidad Deudor con datos relevantes a empresas. Consiste unicamente de datos informativos
 * @author Patricio Cornejo
 */
entity DeudorEmpresa {
	/** Giro */
	giro String,
	/** Razon Social */
	razonSocial String,
	/** Nombre fantasía */
	nombreFantasia String
}

relationship OneToOne {
	DeudorEmpresa to Deudor
}

/**
 * The Operacion entity.
 * @author Patricio Cornejo
 */
entity Operacion {
	/** Número identificador de la operación */
	numOperacion String required maxlength(24),
	/** Monto total de la operación */
	montoOperacion BigDecimal,
	/** Monto adeudado (genralmente suma de detalle) */
	montoMora BigDecimal,
	/** Saldo por cobrar (?) */
	saldoInsoluto BigDecimal,
	/** Fecha de vencimiento de la cuota más antigua morosa (o lo informado por el cedente) */
	fechaVencimiento Instant,
	/** Días en mora de la operación (informados por el cedente) */
	diasMora Integer,
	/** Cantidad de cuotas total de la operación (pueden ser más que las que se encuentran en el sistema) */
	numCuotas Integer,
	/** Fecha de ingreso al sistema */
	fechaIngreso Instant required,
	/** Días en mora de la operación (calculados en base a fechaVencimiento) */
	diasMoraCalculado Integer
}

/**
 * The DetalleOperacion entity.
 * Representa una subdivisión de la operación (generalmente cuotas)
 * @author Patricio Cornejo
 */
entity DetalleOperacion{
	/** Fecha de vencimiento informada */
	fechaVencimiento Instant,
	/** Días de mora (informados por el cedente) */
	diasMora Integer,
	/** Número del detalle */
	numero Integer,
	/** Monto del detalle */
	montoDetalle BigDecimal,
	/** Fecha de ingreso al sistema */
	fechaIngreso Instant required,
	/** Días de mora (calculados en base a fechaVencimiento) */
	diasMoraCalculado Integer
}

/**
 * The Producto entity.
 * Producto asociado a las operaciones
 * @author Patricio Cornejo
 */
entity Producto {
	/** Código corto del producto */
	codigo String unique maxlength(20),
	/** Nombre completo del producto */
	nombre String required unique maxlength(50),
	/** Descripción */
	descripcion String
}

/**
 * The FamiliaProducto entity.
 * Agrupaciones de productos, opcionales
 * @author Patricio Cornejo
 */
entity FamiliaProducto {
	/** Nombre completo del producto */
	nombre String required maxlength(50),
	/** Descripcion */
	descripcion String
}

relationship ManyToOne {
	Producto to FamiliaProducto
}

/**
 * The Moneda entity.
 * Divisas utilizadas por varias entidades en el sistema.
 * Para la mayoría de cliente se contempla Peso Chileno, Dolar y Unidad de Fomento
 * @author Patricio Cornejo
 */
entity Moneda {
	/** Nombre completo de la moneda */
	nombre String required maxlength(50),
	/** Codigo ISO de la moneda, si aplica (ej: CLP, USD) */
	codigoISO String maxlength(5),
	/** Símbolo de la moneda (ej: $, U.F.) */
	signo String maxlength(5)
}

/**
 * The Fase entity.
 * Fase de cobranza de la operación.
 * @author Patricio Cornejo
 */
entity Fase {
	/** Nombre de fase */
	nombre String required,
	/** Indica si corresponde a fase de cobranza judicial */
	indFaseJudicial Boolean required
}


/**
 * The Estado entity.
 * Representa los estados de cobranza de las operaciones
 * @author Patricio Cornejo
 */
entity Estado {
	/** Codigo corto del estado */
	codigo String required unique,
	/** Nombre del estado */
	nombre String required,
	indRuteoManual Boolean,
	indInhibeGestion Boolean,
	indPermiteDiscador Boolean
}

/**
 * The Pago entity.
 * Pago ingresado asociado a una operación
 * @author Patricio Cornejo
 */
entity Pago {
	/** Fecha de digitación del pago (informada por cedente) */
	fechaPago Instant required,
	/** Monto total pagado, relativo a la moneda */
	montoPago BigDecimal required,
	/** Fecha de ingreso del pago al sistema */
	fechaIngreso Instant required,
	/** Porción del monto que corresponde a honorarios */
	montoHonorario BigDecimal,
	/** Porción del monto que corresponde a intereses */
	montoInteres BigDecimal,
	/** Número de documento asociado al pago */
	numDocumento String maxlength(24),
	/** Número de operación asociado al pago. No usa FK ya que operaciones pueden salir del sistema */
	numOperacion String maxlength(24),
	/** Cuota asociada al pago */
	numCuota Integer
}

/**
 * The OperacionDeudor entity.
 * Relaciona operaciones y deudores. 
 * Una operación puede estar relacionada a más de un deudor.
 * Un deudor puede tener varias operaciones a la vez y estar relacionado a la misma con distintos tipos de deudor.
 * @author Patricio Cornejo
 */
entity OperacionDeudor {}

/**
 * The TipoDeudor entity.
 * Representa el tipo de relación establecida entre una operación y un deudor
 * Ej: Deudor Directo, Aval
 * @author Patricio Cornejo
 */
entity TipoDeudor {
	nombre String maxlength(50)
}

// Relaciones de entidad Operacion y detalle
relationship ManyToOne{
	OperacionDeudor{operacion required} to Operacion , 
	OperacionDeudor{deudor required} to Deudor , 
	OperacionDeudor{tipoDeudor required} to TipoDeudor , 
	Operacion{moneda required} to Moneda , 
	Operacion{producto required} to Producto , 
	Operacion{fase} to Fase , 
	Operacion{estado} to Estado , 
	Operacion{estado} to OrigenCarga , 
	DetalleOperacion{operacion required} to Operacion
}

// Relaciones de entidad Pago
relationship ManyToOne {
	Pago to Deudor, Pago to Moneda
}

// Cobranza

/**
 * The Estrategia entity.
 * Definiciones de estrategias de cobranza 
 * @author Patricio Cornejo
 */
entity Estrategia {
	/** Código corto para la estrategia */
	codigo String required unique maxlength(20),
	/** Nombre de la estrategia */
	nombre String required,
	/** Define si es permanente o compartida */
	tipo TipoEstrategia required,
	/** Duración de la estrategia en día */
	duracion Integer,
	/** Indica origen de la ejecución de la estrategia (ARCHIVO o FILTRO) */
	tipoOrigen TipoOrigenEstrategia required,
	/** Porcentaje meta a gestionar */
	meta BigDecimal,
	ordenEjecucion Integer,
	indEjecucion Boolean,
	indPreasignacion Boolean,
	indApoyo Boolean,
	descuento BigDecimal,
	indArrastre Boolean,
	indReevaluacion Boolean,
	indAutomatica Boolean
}
enum TipoEstrategia {
	PERMANENTE, COMPARTIDA
}
enum TipoOrigenEstrategia {
	ARCHIVO, FILTRO
}

/**
 * The Campana entity.
 * Representa la ejecución de una estrategia de cobranza
 * @author Patricio Cornejo
 */
entity Campana {
	/** Vinculada a la fecha de ejecución de la estrategia de origen */
	fechaInicio Instant,
	/** Fecha de termino calculada por la duración de la estrategia */
	fechaTermino Instant,
	/** Cantidad total de deudores únicos incluídos durante la ejecución */
	numDeudoresIni Integer,
	/** Cantidad total de deudores actual en la campaña */
	numDeudoresActual Integer,
	/** Cantidad de operaciones incluídas durante la ejecución*/
	numOperacionesIni Integer,
	/** Cantidad de operaciones actual en la campaña*/
	numOperacionesActual Integer,
	porcDescuento BigDecimal
}

/**
 * The OperacionDeudorCampana entity.
 * Contiene la distribución de las operaciones en las distintas campañas activas en el sistema
 * @author A true hipster
 */
entity OperacionDeudorCampana {
	/** Fecha de asignación del registro al usuario o sucursal de cobranza */
	fechaAsignacion Instant,
	/** Contador de gestiones para esta campaña/operación utilizado por las campañas compartidas */
	contadorAccessos Integer,
	/** Monto en mora inicial de la operación al ingresar en la campaña */
	montoMoraInicial BigDecimal
	/** Saldo insoluto inicial de la operación al ingresar en la campaña */
	saldoInsolutoInicial BigDecimal
}

relationship ManyToOne {
	OperacionDeudorCampana to Deudor,
	OperacionDeudorCampana to Operacion,
	OperacionDeudorCampana to TipoDeudor,
	OperacionDeudorCampana to Moneda,
	OperacionDeudorCampana to Campana,
	OperacionDeudorCampana to SucursalCobranza,
	OperacionDeudorCampana to EmpresaExterna,
	OperacionDeudorCampana to User
}

/**
 * The Accion entity.
 * Define los diferentes tipos de acción de cobranza relacionados a las gestiones. Cada acción se relaciona a un grupo de posibles Contactos
 * Ej: Gestión Telefónica, Gestión Terreno
 * @author Patricio Cornejo
 */
entity Accion {
	/** Nombre de la acción */
	nombre String required maxlength(50),
	/** Costo asociado a la gestión */
	montoCosto BigDecimal,
	/** Indica si la acción es de tipo teléfonico, lo que obliga a indicar el telefono del deudor utilizado en la gestión */
	indTelefono Boolean required
}

/**
 * The Contacto entity.
 * Define los diferentes tipos de contacto asociados a una acción de cobranza. Cada contacto se relaciona a un grupo de posibles respuestas.
 * Ej: Contacto con deudor directo, Sin contacto
 * @author Patricio Cornejo
 */
entity Contacto {
	/** Nombre del contacto */
	nombre String required maxlength(50),
	/** Indica si el contacto puede generar compromisos de pago, aunque esto tambien depende de las respuesta de la gestión */
	indGeneraCompromiso Boolean required
}

/**
 * The Respuesta entity.
 * Define las diferentes tipos de respuesta relacionados a contactos.
 * Ej: No se reconoce deuda, Indica fecha para regularizar
 * @author Patricio Cornejo
 */
entity Respuesta {
	/** Nombre de la respuesta */
	nombre String required maxlength(50),
	/** Indica si la respuesta genera un compromiso de pago, esto hace que se solicite una fecha y un monto a pagar como dato adicional para la gestión */
	indCompromisoPago Boolean,
	/** Indica si la respuesta genera un compromiso de contacto, similar al compromiso de pago, pero solo requiere una fecha */
	indCompromisoFecha Boolean
}

relationship ManyToMany {
	Estrategia to Accion , Accion to Contacto , Contacto to Respuesta
}

/**
 * The Gestion entity.
 * Representa un contacto con un deudor a traves de cualquier combinación de cobranza Accion-Contacto-Respuesta
 * Siempre esta relacionada a un usuario (ingresada a traves de app) o empresa externa (carga masiva)
 * Los campos ID 
 * @author Patricio Cornejo
 */
entity Gestion {
	idOperacion Long, // Referencia post-eliminación Operacion
	idCampana Long, // Referencia post-eliminación Campana
	idUsuario Long, // Referencia post-eliminación User
	cobrador String, // Referencia post-eliminación User
	fechaHoraGestion Instant,
	glosa String maxlength(1000),
	nombreContacto String,
	programacionLlamada Instant,
	montoCompromiso BigDecimal,
	fechaCompromiso Instant,
	idProducto Long, // Referencia post-eliminación Producto
	producto String, // Referencia post-eliminación Producto
	idAccion Long required, // Referencia post-eliminación Accion, Contacto, Respuesta
	accion String required maxlength(50), // Referencia post-eliminación Accion
	idContacto Long required, // Referencia post-eliminación Contacto
	contacto String required maxlength(50), // Referencia post-eliminación Contacto
	idRespuesta Long required, // Referencia post-eliminación Respuesta
	respuesta String required maxlength(50), // Referencia post-eliminación Respuesta
	montoCosto BigDecimal,
	codigoCarta String,
	nombreCarta String,
	numOperacion String maxlength(24), // Referencia post-eliminación Operacion
	duracion Integer,
	montoMoraGestion BigDecimal,
	codigoEstrategia String, // Referencia post-eliminación Estrategia
	nombreEstrategia String // Referencia post-eliminación Estrategia
    fechaInicio Instant,
	fechaTermino Instant,
	numTelefono String,
	fechaIngresoGestion Instant required
}
relationship ManyToOne {
	Gestion to Deudor{required}, 
	Gestion to Moneda{required}, 
	Gestion to Estado, 
	Gestion to EmpresaExterna,
	Accion to Moneda
}
relationship OneToOne {
	Campana to Estrategia
}

/**
 * The Alerta entity.
 * Representa una nota generica asociada a un deudor, las que se pueden cargar masivamente o generar por el sistema según la necesidad
 * Pueden tener una duración en días y ser borradas automaticamente si es necesario.
 * @author Patricio Cornejo
 */
entity Alerta {
	/** glosa */
	glosa String required maxlength(1000),
	/** Fecha de ingreso al sistema o fecha de creación para autogeneradas */
	fechaCreacion Instant required,
	/** Duración de la alerta en días. Valor nulo indica que tiene una duración indefinida. */
	duracion Integer,
	/** Fecha en la que se eliminaría la Alerta. Es autogenerada por el sistema y queda nula si la duración es nula */
	fechaTermino Instant
}

// Sucursales de cobranza

/**
 * The CentroCobranza entity.
 * @author Patricio Cornejo
 */
entity CentroCobranza {
	/** Codigo del centro de cobranza */
	codigo String maxlength(20),
	/** Nombre completo del centro */
	nombre String required maxlength(50),
	/** Direccion completa del centro */
	direccion String,
	/** Telefono de contacto del centro */
	telefono String maxlength(20),
	/** Email de contacto del centro */
	email String,
	/** Nombre del contacto del centro */
	nombreContacto String maxlength(50)
}

relationship ManyToOne{
	CentroCobranza to ZonaGeografica,
	CentroCobranza to Empresa
}

/**
 * The SucursalCobranza entity.
 * @author Patricio Cornejo
 */
entity SucursalCobranza {
	/** Codigo de la sucursal de cobranza */
	codigo String maxlength(20),
	/** Nombre completo de la sucursal */
	nombre String required maxlength(50),
	/** Direccion completa de la sucursal */
	direccion String,
	/** Telefono de contacto de la sucursal */
	telefono String maxlength(20),
	/** Email de contacto de la sucursal */
	email String,
	/** Nombre del contacto de la sucursal */
	nombreContacto String maxlength(50)
}

relationship ManyToOne{
	SucursalCobranza to CentroCobranza,
	SucursalCobranza to ZonaGeografica,
	SucursalCobranza to Empresa
}

/**
 * The Distrito entity.
 * Distrito pertenece a un centro de cobranza y agrupa varias sucursales de cobranza
 * @author A true hipster
 */
entity Distrito {
	/** Código del distito */
	codigo String maxlength(20),
	/** Nombre del distrito */
	nombre String required maxlength(50)
}

relationship ManyToOne {
	Distrito to CentroCobranza
}

/**
 * The SucursalDistrito entity.
 * Representa una sucursal de cobranza asociada a un distrito
 * @author A true hipster
 */
entity SucursalDistrito {}

/**
 * The SucursalDistrito entity.
 * Representa una sucursal de cobranza asociada a un distrito
 * @author A true hipster
 */
entity SucursalEmpresaCedente {
	/** Codigo de la sucursal de cobranza */
	codigo String maxlength(20),
	/** Nombre completo de la sucursal */
	nombre String required maxlength(50),
	/** Direccion completa de la sucursal */
	direccion String,
	/** Telefono de contacto de la sucursal */
	telefono String maxlength(20),
	/** Email de contacto de la sucursal */
	email String,
	/** Nombre del contacto de la sucursal */
	nombreContacto String maxlength(50)
}

relationship ManyToOne {
	SucursalEmpresaCedente to SucursalCobranza,
	SucursalEmpresaCedente to ZonaGeografica,
	SucursalEmpresaCedente to Empresa
}

relationship ManyToOne {
	SucursalDistrito to SucursalCobranza,
	SucursalDistrito to Distrito,
	SucursalDistrito to SucursalEmpresaCedente
}


// Mantenedores
/**
 * The Empresa entity.
 * Representa una empresa dentro del sistema
 * @author A true hipster
 */
entity Empresa {
	/** Codigo de la empresa */ 
	codigo String maxlength(20),
	/** Nombre de la empresa */ 
	nombre String required maxlength(50),
	/** Direccion completa de la empresa */
	direccion String,
	/** Telefono de contacto completo de la empresa */
	telefono String maxlength(20),
	/** Email de contacto de la empresa */
	email String,
	/** Nombre del contacto de la empresa */
	nombreContacto String maxlength(50)
}

/**
 * The EmpresaExterna entity.
 * Extiende una empresa en una empresa de cobranza externa.
 * Son las que realizan la cobranza pero no informan la deuda
 * @author A true hipster
 */
entity EmpresaExterna {
}

/**
 * The Rubro entity.
 * Representa un rubro de cobranza para agrupar los diferentes arboles de gestión por rubro
 * @author A true hipster
 */
entity Rubro {
	nombre String required maxlength(50)
}

/**
 * The EmpresaCedente entity.
 * Extiende una empresa en una empresa cedente.
 * Son las que informan la cartera que es cargada al sistema
 * @author A true hipster
 */
entity EmpresaCedente {
}

relationship OneToOne {
	EmpresaExterna{empresa} to Empresa , EmpresaCedente{empresa} to Empresa
}

/**
 * The AccionContactoRespuesta entity.
 * Establece las posibles relaciones Accion - Contacto - Respuesta para los rubros dentro del sistema
 * Las propiedades valor, contador y dias son utilizadas en el caclulo de prioridad de los teléfonos.
 * @author Patricio Cornejo
 */
entity AccionContactoRespuesta {
	/** Valor incorporado al peso de un teléfono al ingresar una gestión con esta combinación */
	valor Integer,
	/** Indica la cantidad de gestiones dentro de los últimos {@code dias} con esta combinación para  
	 *	que el peso del teléfono incorporado cambie a el "Valor mínimo"
	 */
	contador Integer,
	/** Intervalo de días para consultar gestiones con "Valor Mínimo" */
	dias Integer
}

relationship ManyToOne {
	EmpresaCedente to Rubro, 
	AccionContactoRespuesta to Rubro, 
	AccionContactoRespuesta to Accion, 
	AccionContactoRespuesta to Contacto, 
	AccionContactoRespuesta to Respuesta
}

/**
 * The ZonaGeografica entity.
 * Representa una zona geografica de cualquier nivel. Además, establece la jerarquia entre las zonas
 * a traves de una relación con la misma entidad y los distintos niveles de jerarquia.
 * @author Patricio Cornejo
 */
entity ZonaGeografica {
	/** Nombre de la zona */
	nombre String required maxlength(50),
	/** Código de area */
	codigoArea String
}

/**
 * The NivelZonaGeografica entity.
 * Contiene los diferentes tipos de niveles de zona geografica y establece la jerarquia entre ellos
 * EJ: REGION -> PROVINCIA -> COMUNA
 * @author Patricio Cornejo
 */
entity NivelZonaGeografica {
	/** Nombre del nivel */
	nombre String required maxlength(50)
}

relationship ManyToOne {
	Empresa to ZonaGeografica  , ZonaGeografica to NivelZonaGeografica , NivelZonaGeografica{nivelPadre} to NivelZonaGeografica , ZonaGeografica{zonaPadre} to ZonaGeografica
}

//Demograficos

/**
 * The TipoDireccion entity.
 * Representa los distintos tipos de dirección que existen en el sistema (PARTICULAR, COMERCIAL)
 * @author Patricio Cornejo
 */
entity TipoDireccion {
	nombre String required maxlength(50)
}

/**
 * The TipoTelefono entity.
 * Representa los distintos tipos de teléfono que existen en el sistema (PARTICULAR, COMERCIAL, CELULAR)
 * @author Patricio Cornejo
 */
entity TipoTelefono {
	nombre String required maxlength(50)
}

/**
 * The OrigenCarga entity.
 * Indica el canal por el cual se cargan algunas entidades en el sistema (ej: Carga de Datos, Ingresado por usuario),
 * cuando aplican varios canales (Ej: las operaciones solo se cargan por carga de datos, entonces no aplica).
 * @author Patricio Cornejo
 */
entity OrigenCarga {
	/** Nombre del orígen. Ej: SITREL_CS */ 
	nombre String required maxlength(50),
	/** Descripción, Ej: Dato ingresado a traves de la aplicación cliente Sitrel CS */ 
	descripcion String
}

/**
 * The Direccion entity
 * Representa una dirección asociada siempre a un deudor
 * @author Patricio Cornejo
 */
entity Direccion {
	/** Glosa completa de la dirección */
	glosa String required maxlength(400),
	/** Nombre de calle/avenida/etc */
	calle String required maxlength(255),
	/** Número principal del domicilio, se usa String para los casos con letras (ej: 172-B, S/N) */
	numero String required maxlength(10),
	/** Número de departamento */
	depto String maxlength(10),
	/** Número del piso */
	piso String maxlength(10),
	/** Número/Identificación del block */
	block String maxlength(10),
	/** Nombre de población/villa/sector/condominio */
	sector String maxlength(50),
	/** Codigo Postal */
	codigoPostal String maxlength(20),
	/** Fecha de ingreso al sistema */
	fechaIngreso Instant
}

relationship ManyToOne {
	Direccion to Deudor,
	Direccion to TipoDireccion
	Direccion to ZonaGeografica,
	Direccion to EmpresaCedente,
	Direccion to OrigenCarga
}

/**
 * The Telefono entity
 * Representa un teléfono asociado siempre a un deudor
 * @author Patricio Cornejo
 */
entity Telefono {
	/** Número telefónico completo */
	numero String required maxlength(20),
	/** Fecha de ingreso al sistema */
	fechaIngreso Instant required,
	/** Establece un ordenamiento sobre la "calidad" del telefono. Menor prioridad = Mejor telefono */
	prioridad Integer,
	/** Fecha de la ultima modificación del peso, generalmente la fecha de la última gestión con este teléfono */
	fechaActualizacionPeso Instant,
	/** Lleva la cuenta de las modificaciones del peso en base a las gestiones ingresadas con este teléfono
	 *  Mayor Peso = Mejor Telefono = Menor Prioridad
	 */
	peso Integer,
	/** Indica, si el telefono tiene el valor minimo, si este fue alcanzado por suma de gestiones validas
	 *	o por el contador de las gestiones mínimas
	 */
	tipoPeso Integer
}

relationship ManyToOne {
	Telefono to Deudor,
	Telefono to TipoTelefono,
	Telefono to EmpresaCedente,
	Telefono to OrigenCarga
}

/**
 * The Email entity
 * Representa un email asociado siempre a un deudor
 * @author Patricio Cornejo
 */
entity Email {
	/** Direccion de correo completa */
	direccion String required,
	/** Fecha de ingreso al sistema */
	fechaIngreso Instant
}

relationship ManyToOne{
	Email to Deudor,
	Email to EmpresaCedente,
	Email to OrigenCarga
}

dto * with mapstruct
service * with serviceClass
paginate * with pagination

skipClient *
